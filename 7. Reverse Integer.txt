7. Reverse Integer
Medium

9129

11176

Add to List

Share
Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

 

Example 1:

Input: x = 123
Output: 321
Example 2:

Input: x = -123
Output: -321
Example 3:

Input: x = 120
Output: 21
 

Constraints:

-231 <= x <= 231 - 1
Accepted
2,367,778
Submissions
8,683,516



class Solution {
public:
    int reverse(int x) {
        
        int upperLimit =  (pow(2,31) - 1)/10;
        int lowerLimit = -(pow(2,31)/10);
    
        int ans = 0;
        
        while(x){
           
            int lastDigit = x%10;
			
            if(ans <= upperLimit && ans >= lowerLimit){ //Checking if ans will be there in integer range.
                 int temp = ans * 10 + lastDigit;
                 ans = temp;
                 x/=10;  
            }
            else{ // ans would exceed the int if multiplied by 10. Thus integer overflow occur
                return 0;
            }
            
        }
        return ans;
    }
};