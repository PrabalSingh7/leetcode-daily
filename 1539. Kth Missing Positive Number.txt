1539. Kth Missing Positive Number
Easy
3.8K
280
Companies
Given an array arr of positive integers sorted in a strictly increasing order, and an integer k.

Return the kth positive integer that is missing from this array.

 

Example 1:

Input: arr = [2,3,4,7,11], k = 5
Output: 9
Explanation: The missing positive integers are [1,5,6,8,9,10,12,13,...]. The 5th missing positive integer is 9.
Example 2:

Input: arr = [1,2,3,4], k = 2
Output: 6
Explanation: The missing positive integers are [5,6,7,...]. The 2nd missing positive integer is 6.
 

Constraints:

1 <= arr.length <= 1000
1 <= arr[i] <= 1000
1 <= k <= 1000
arr[i] < arr[j] for 1 <= i < j <= arr.length
 

Follow up:

Could you solve this problem in less than O(n) complexity?

Accepted
228.2K
Submissions
401.7K
Acceptance Rate
56.8%




class Solution {
public:
    int findKthPositive(vector<int>& arr, int k) {
        
        int count = 0;
        count += arr[0] - 1;
        
        if(count>=k)
            return k;
        
        for(int i=0; i<arr.size()-1; i++)     {
            int curr = arr[i+1] - arr[i] - 1 ;
            
            if(curr + count < k)    {
                count += curr;    
            }
            else if(curr + count == k)  {
                return arr[i+1] - 1;
            }
            else {
                return arr[i] + (k-count);
            }
        }
        
        return arr[arr.size()-1] + (k-count);
    }
};